<UserControl x:Class="Naver.Compass.Module.MasterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:prism="clr-namespace:Microsoft.Practices.Prism.Commands;assembly=Microsoft.Practices.Prism"
             xmlns:local="clr-namespace:Naver.Compass.Module"
             xmlns:ctlBase="clr-namespace:Naver.Compass.Common;assembly=Naver.Compass.Common.ControlBase"
             xmlns:commonBase="clr-namespace:Naver.Compass.Common.CommonBase;assembly=Naver.Compass.Common.CommonBase"
             mc:Ignorable="d" 
             SnapsToDevicePixels="True"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <commonBase:Bool2CollapseConverter x:Key="Bool2Visible"/>
            <Style TargetType="Button"
                   BasedOn="{StaticResource ToolbarStyleButton}">
                <Setter Property="Width"
                        Value="18" />
                <Setter Property="Height"
                        Value="18" />
                <Setter Property="Margin"
                        Value="2,1" />
                <Setter Property="RenderOptions.BitmapScalingMode" 
                        Value="NearestNeighbor"/>

            </Style>
            <Image x:Key="delete"
                   x:Shared="false"
                   Source="Resources/Images/icon-16-delete-page.png"
                   Width="16"
                   Height="16" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid MouseDown="PagesFrame_MouseDown">
        <Grid.RowDefinitions>
            <RowDefinition Height="24" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Border BorderThickness="0,0,0,1"
                BorderBrush="#D1D1D1"
                Background="#F8F8F8F8">
            <StackPanel Orientation="Horizontal"
                        Margin="3,0,0,0">
                <Button  Command="{Binding MasterNewCommand}"
                         ToolTip="{DynamicResource Master_Add}">
                    <Image>
                        <Image.Style>
                            <Style BasedOn="{StaticResource ImageEnabled}" TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Resources/Images/icon-16-add-page.png"/>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>              
                <Button   Command="{Binding MasterDeleteCommand}"
                          CommandParameter="{Binding ElementName=PageTreeView}"
                          ToolTip="{DynamicResource Master_Delete}">
                    <Image Source="Resources/Images/icon-16-delete-page.png"
                           Style="{StaticResource ImageEnabled}" />
                </Button>
                <Button   Command="{Binding MasterSearchCommand}"
                          ToolTip="{DynamicResource Master_Search}">
                    <Image Source="Resources/Images/icon-16-search-page.png"
                           Style="{StaticResource ImageEnabled}" />
                </Button>
            </StackPanel>
        </Border>

        <Grid Margin="2,2,2,5" Grid.Row="1" Visibility="{Binding SearchBoxVisibility}">
            <AdornerDecorator>
                <TextBox  Height="22"     
                          Style="{StaticResource BorderTextbox}"
                          BorderBrush="#FFd5d5d5"
                          Padding="4,2,4,2"           
                          Text="{Binding SearchPageName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ctlBase:WatermarkService.Watermark>
                        <TextBlock Margin="4,1,4,2"
                                                   Text="{DynamicResource Libraries_Search}" />
                    </ctlBase:WatermarkService.Watermark>
                </TextBox>
            </AdornerDecorator>
            <Image HorizontalAlignment="Right" VerticalAlignment="Center"
                       Margin="0,0,8,1"
                       Width="15" Height="15"                        
                       Visibility="{Binding DeleteSearchVisibility}"
                       RenderOptions.BitmapScalingMode="NearestNeighbor">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding DeleteSearchCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Image.Style>
                    <Style TargetType="{x:Type Image}">
                        <Setter Property="Source" Value="Resources/Images/Close_Normal.png" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="Resources/Images/Close_Rollover_on.png"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </Grid>

        <TreeView Name="PageTreeView" 
                  BorderThickness="0"
                  ItemsSource="{Binding Path=RootNode.Children,Mode=TwoWay}"
                  Grid.Row="2"
                  commonBase:CommandSinkBinding.CommandSink="{Binding}"
                  PreviewMouseRightButtonDown="TreeViewItem_PreviewMouseRightButtonDown"
                  AllowDrop="True">
            <TreeView.CommandBindings>
                <commonBase:CommandSinkBinding Command="ApplicationCommands.Undo" />
                <commonBase:CommandSinkBinding Command="ApplicationCommands.Redo" />
            </TreeView.CommandBindings>

            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}"
                       BasedOn="{StaticResource  MasterTreeViewItem}">
                    <Setter Property="Height" 
                            Value="35"/>
                    <Setter Property="BorderBrush" 
                            Value="#E8E8E8"/>
                    <Setter Property="BorderThickness" 
                            Value="0,0,0,1"/>
                    <Setter Property="IsExpanded"
                            Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected"
                            Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="Visibility"
                            Value="{Binding Path=IsMatch, Mode=OneWay}" />
                    <EventSetter Event="KeyDown"
                                 Handler="TreeItem_KeyDown"></EventSetter>
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.InputBindings>
                <KeyBinding Key="N"
                            Modifiers="Alt"
                            Command="{Binding MasterNewCommand}" />
                <KeyBinding Key="Delete"
                            Command="{Binding MasterDeleteCommand}" />
                <KeyBinding Key="Back"
                            Command="{Binding MasterDeleteCommand}" />
            </TreeView.InputBindings>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <Border HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="Transparent"
                            BorderThickness="0"
                            Tag="{Binding DataContext, ElementName=PageTreeView}"
                            MouseMove="treeView_MouseMove"
                            x:Name="bd">
                        <Grid x:Name="itemPanel" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ctlBase:EditableTextBlock Margin="8,0,0,0" 
                                                       Text="{Binding Name, Mode=TwoWay}" 
                                                       VerticalAlignment="Center"
                                                       IsInEditMode="{Binding IsNodeEditable, Mode=TwoWay}"
                                                       IsSelected="{Binding IsEditboxFocus}" >
                            </ctlBase:EditableTextBlock>
                            <Image x:Name="SettingIcon" 
                                   Grid.ColumnSpan="2"  
                                   Visibility="Collapsed"
                                   Source="Resources/Images/ico_setting.png"
                                   HorizontalAlignment="Right"
                                   Width="14"
                                   Height="14" 
                                   Margin="0,0,9,0">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding DataContext.Add2PagesCommand , ElementName=PageTreeView}"
                                                               CommandParameter="{Binding Path=DataContext,ElementName=itemPanel}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Image>
                        </Grid>
                        <Border.Resources>
                            <ContextMenu FontWeight="Normal" x:Key="standardMenu">
                                <MenuItem Header="{DynamicResource Master_Add}"
                                          Command="{Binding PlacementTarget.Tag.AddMasterCommand, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
                                <MenuItem Header="{DynamicResource Master_Delete}"
                                          Icon="{StaticResource delete}"
                                          Command="{Binding PlacementTarget.Tag.MasterDeleteCommand, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
                                <MenuItem Header="{DynamicResource Sitemap_Menu_Rename}"
                                          Command="{Binding PlacementTarget.Tag.EditNodeCommand, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
                                <MenuItem Header="{DynamicResource Sitemap_Menu_Duplicate}" Command="{Binding PlacementTarget.Tag.DuplicateCommand, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
                                <MenuItem Header="{DynamicResource Master_AddToPages}"
                                          Command="{Binding PlacementTarget.Tag.Add2PagesCommand, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
                                <MenuItem Header="{DynamicResource Master_ContextMenu_DeleteFromAllPages}"
                                          Visibility="{Binding PlacementTarget.Tag.IsStandardDocument, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Converter={StaticResource Bool2Visible}}"
                                          Command="{Binding PlacementTarget.Tag.DeleteFromAllPagesCommand, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
                            </ContextMenu>
                        </Border.Resources>
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="ContextMenu" Value="{StaticResource standardMenu}"/>
                            </Style>
                        </Border.Style>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding DataContext.OpenMasterCommand, ElementName=PageTreeView}"
                                                       CommandParameter="{Binding Path=DataContext,ElementName=itemPanel}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Border>
                    <!--<HierarchicalDataTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="SettingIcon"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                    </HierarchicalDataTemplate.Triggers>-->
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding DeselectNodeCommand}"
                                           CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource  AncestorType={x:Type TreeView}}}" />
                </i:EventTrigger>              
            </i:Interaction.Triggers>

        </TreeView>

    </Grid>
</UserControl>
