<!--***********************************************************************************

   AvalonDock

   Copyright (C) 2007-2013 Xceed Software Inc.

   This program is provided to you under the terms of the New BSD
   License (BSD) as published at http://avalondock.codeplex.com/license 

   For more features, controls, and fast professional support,
   pick up AvalonDock in Extended WPF Toolkit Plus at http://xceed.com/wpf_toolkit

   Stay informed: follow @datagrid on Twitter or Like facebook.com/datagrids

  **********************************************************************************-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:localThemes="clr-namespace:Xceed.Wpf.AvalonDock.Themes"
                    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Xceed.Wpf.AvalonDock"
                    xmlns:avalonDock="clr-namespace:Xceed.Wpf.AvalonDock;assembly=Xceed.Wpf.AvalonDock"
                    xmlns:avalonDockLayout="clr-namespace:Xceed.Wpf.AvalonDock.Layout;assembly=Xceed.Wpf.AvalonDock"
                    xmlns:avalonDockControls="clr-namespace:Xceed.Wpf.AvalonDock.Controls;assembly=Xceed.Wpf.AvalonDock"
                    xmlns:avalonDockAero="clr-namespace:Xceed.Wpf.AvalonDock.Themes"
                    xmlns:avalonDockThemeControls="clr-namespace:Xceed.Wpf.AvalonDock.Themes.Controls"
                    xmlns:avalonDockConverters="clr-namespace:Xceed.Wpf.AvalonDock.Converters;assembly=Xceed.Wpf.AvalonDock"
                    xmlns:avalonDockProperties="clr-namespace:Xceed.Wpf.AvalonDock.Properties;assembly=Xceed.Wpf.AvalonDock">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <avalonDockConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <avalonDockConverters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
    <avalonDockConverters:AnchorSideToOrientationConverter x:Key="AnchorSideToOrientationConverter" />
    <avalonDockConverters:AnchorSideToAngleConverter x:Key="AnchorSideToAngleConverter" />
    <avalonDockConverters:NullToDoNothingConverter x:Key="NullToDoNothingConverter" />
    <avalonDockConverters:LayoutItemFromLayoutModelConverter x:Key="LayoutItemFromLayoutModelConverter" />
    <avalonDockConverters:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter" />
    <avalonDockConverters:ImageVisibilityConverter x:Key="ImageVisibleConverter" />
    <avalonDockConverters:LayoutDocumentPaneControSelectedItemConverter x:Key="LayoutDocumentPaneControSelectedItemConverter" />
    <avalonDockConverters:LayoutDocumentPaneControSelectedItemMarginLeftConverter x:Key="LayoutDocumentPaneControSelectedItemMarginLeftConverter" />
    <avalonDockConverters:LayoutDocumentPaneControSelectedItemMarginRightConverter x:Key="LayoutDocumentPaneControSelectedItemMarginRightConverter" />
    <avalonDockConverters:LayoutDocumentTypeHeaderHeightConverter x:Key="LayoutDocumentTypeHeaderHeightConverter" />
    <avalonDockConverters:LayoutDocumentTypeHeaderButtonVisibleConverter x:Key="LayoutDocumentTypeHeaderButtonVisibleConverter" />
    <avalonDockConverters:LayoutDocumentTypeHeaderNewButtonMaxWidthConverter x:Key="LayoutDocumentTypeHeaderNewButtonMaxWidthConverter" />
    <avalonDockConverters:LayoutDocumentPaneControSelectedItemHeaderColorConverter x:Key="LayoutDocumentPaneControSelectedItemHeaderColorConverter">
        <avalonDockConverters:LayoutDocumentPaneControSelectedItemHeaderColorConverter.ResourceDictionary>
            <ResourceDictionary Source="Brushes.xaml" />
        </avalonDockConverters:LayoutDocumentPaneControSelectedItemHeaderColorConverter.ResourceDictionary>
    </avalonDockConverters:LayoutDocumentPaneControSelectedItemHeaderColorConverter>
    
    <!--Hide/Show left, right, bottom button-->
    <Style x:Key="HidePanelButton"
           TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background"
                Value="#D4D4D4" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Bd"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="#C6C6C6" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="#C6C6C6" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="#BCBCBC" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DocumentPaneControlStyle-->
    <Style x:Key="AvalonDock_ThemeAero_DocumentPaneControlStyle"
           TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor13Key}}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.DocTabBorderKey}}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
                    <Grid ClipToBounds="true"
                          SnapsToDevicePixels="true"
                          KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentPaneControl}},Converter={StaticResource LayoutDocumentTypeHeaderHeightConverter}}" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <!--Following border is required to catch mouse events-->
                        <Border Background="{DynamicResource {x:Static avalonDockAero:AeroColors.DocTabHeaderBgKey}}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Grid.RowSpan="2" />
                        <Grid  Panel.ZIndex="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="18" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="18" />
                            </Grid.ColumnDefinitions>

                            <avalonDockControls:DocumentPaneTabPanel x:Name="HeaderPanel"
                                                                     Grid.Column="1"
                                                                     IsItemsHost="true"
                                                                     Grid.Row="0"
                                                                     KeyboardNavigation.TabIndex="1">
                                <avalonDockControls:DocumentPaneTabPanel.MaxWidth>
                                    <MultiBinding Converter="{StaticResource LayoutDocumentTypeHeaderNewButtonMaxWidthConverter}">
                                        <Binding Path="ActualWidth"
                                                 RelativeSource="{RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentPaneControl}}" />
                                        <Binding RelativeSource="{RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentPaneControl}}" />
                                    </MultiBinding>
                                </avalonDockControls:DocumentPaneTabPanel.MaxWidth>
                            </avalonDockControls:DocumentPaneTabPanel>
                            <StackPanel Orientation="Horizontal"
                                        Grid.Column="2"
                                        Margin="0,0,16,0"
                                        HorizontalAlignment="Left"
                                        Name="AddBtnPanel"
                                        Visibility="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentPaneControl}},Converter={StaticResource LayoutDocumentTypeHeaderButtonVisibleConverter}}"
                                        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDown">
                                        <i:InvokeCommandAction Command="{Binding AddNewPageCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Canvas Width="25"
                                        UseLayoutRounding="True"
                                        Margin="0,1,0,0"
                                        Height="25"
                                        Name="AddBtnBg">
                                    <Canvas.Background>
                                        <ImageBrush ImageSource="Images/AddBtn_Defalut.png" />
                                    </Canvas.Background>
                                </Canvas>
                                <Border Height="25"
                                        BorderThickness="0.5"
                                        BorderBrush="#ffd3d3d3"
                                        Name="AddBtnBorder" />
                            </StackPanel>
                            <avalonDockControls:DropDownButton x:Name="MenuDropDownButton"
                                                               Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                                                               Focusable="False"
                                                               VerticalAlignment="Center"
                                                               Grid.Column="3"
                                                               Width="18"
                                                               Height="18">
                                <avalonDockControls:DropDownButton.DropDownContextMenu>
                                    <avalonDockControls:ContextMenuEx ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}">
                                        <avalonDockControls:ContextMenuEx.ItemContainerStyle>
                                            <Style TargetType="{x:Type avalonDockControls:MenuItemEx}"
                                                   BasedOn="{StaticResource {x:Type MenuItem}}">
                                                <Setter Property="HeaderTemplate"
                                                        Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}" />
                                                <Setter Property="HeaderTemplateSelector"
                                                        Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}" />
                                                <Setter Property="IconTemplate"
                                                        Value="{Binding Path=Root.Manager.IconContentTemplate}" />
                                                <Setter Property="IconTemplateSelector"
                                                        Value="{Binding Path=Root.Manager.IconContentTemplateSelector}" />
                                                <Setter Property="Command"
                                                        Value="{Binding Path=., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}" />
                                            </Style>
                                        </avalonDockControls:ContextMenuEx.ItemContainerStyle>
                                    </avalonDockControls:ContextMenuEx>
                                </avalonDockControls:DropDownButton.DropDownContextMenu>
                                <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinDocMenu_Dark.png"
                                       Stretch="Uniform" />
                            </avalonDockControls:DropDownButton>

                            <Grid  x:Name="HideLeft"
                                   Visibility="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentPaneControl}},Converter={StaticResource LayoutDocumentTypeHeaderButtonVisibleConverter}}">
                                <Button Height="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentPaneControl}},Converter={StaticResource LayoutDocumentPaneControSelectedItemConverter}}"
                                        Margin="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentPaneControl}},Converter={StaticResource LayoutDocumentPaneControSelectedItemMarginLeftConverter}}"
                                        Style="{StaticResource HidePanelButton}"
                                        Command="{Binding Path=Model.Root.Manager.HidePaneCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        CommandParameter="Left">
                                    <StackPanel>
                                        <Image Source="Images/HideLeft.png"
                                               Width="8"
                                               Height="8"
                                               Visibility="{Binding Path=Model.Root.Manager.IsLeftPanesVisible, Converter={StaticResource ImageVisibleConverter}, ConverterParameter=1 , RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Image Source="Images/HideRight.png"
                                               Width="8"
                                               Height="8"
                                               Visibility="{Binding Path=Model.Root.Manager.IsLeftPanesVisible, Converter={StaticResource ImageVisibleConverter}, ConverterParameter=2 , RelativeSource={RelativeSource TemplatedParent}}" />
                                    </StackPanel>
                                </Button>
                                <Border  BorderThickness="1"
                                         Margin="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentPaneControl}},Converter={StaticResource LayoutDocumentPaneControSelectedItemMarginRightConverter}}"
                                         BorderBrush="{DynamicResource {x:Static avalonDockAero:AeroColors.WindowBorderColorKey}}" />
                            </Grid>
                            <Grid  x:Name="HideRight"
                                   Visibility="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentPaneControl}},Converter={StaticResource LayoutDocumentTypeHeaderButtonVisibleConverter}}"
                                   Grid.Column="4">
                                <Button Height="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentPaneControl}},Converter={StaticResource LayoutDocumentPaneControSelectedItemConverter}}"
                                        Margin="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentPaneControl}},Converter={StaticResource LayoutDocumentPaneControSelectedItemMarginRightConverter}}"
                                        Style="{StaticResource HidePanelButton}"
                                        Command="{Binding Path=Model.Root.Manager.HidePaneCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        CommandParameter="Right">
                                    <StackPanel>
                                        <Image Source="Images/HideRight.png"
                                               Width="8"
                                               Height="8"
                                               Visibility="{Binding Path=Model.Root.Manager.IsRightPanesVisible, Converter={StaticResource ImageVisibleConverter}, ConverterParameter=1 , RelativeSource={RelativeSource TemplatedParent}}" />

                                        <Image Source="Images/HideLeft.png"
                                               Width="8"
                                               Height="8"
                                               Visibility="{Binding Path=Model.Root.Manager.IsRightPanesVisible, Converter={StaticResource ImageVisibleConverter}, ConverterParameter=2 , RelativeSource={RelativeSource TemplatedParent}}" />
                                    </StackPanel>
                                </Button>
                                <Border  BorderThickness="1"
                                         Margin="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentPaneControl}},Converter={StaticResource LayoutDocumentPaneControSelectedItemMarginRightConverter}}"
                                         BorderBrush="{DynamicResource {x:Static avalonDockAero:AeroColors.WindowBorderColorKey}}" />
                            </Grid>
                        </Grid>
                        <Border x:Name="ContentPanel"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Grid.Column="0"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                Grid.Row="1"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Cycle"
                                CornerRadius="0">
                            <!--CornerRadius="0,3,3,3"-->
                            <!--<Border
                                BorderBrush="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor2Key}}"
                                BorderThickness="1,1,1,1"
                                CornerRadius="2"
                                >
                        <Border
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" 
                                    Margin="2"
                                    CornerRadius="0,2,2,2"
                                    >-->
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentSource="SelectedContent"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <!--</Border>
                     </Border>-->
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 SourceName="AddBtnPanel"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="AddBtnBg">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Images/AddBtn_Over.png" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush"
                                    TargetName="AddBtnBorder"
                                    Value="#ffb1b1b1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 SourceName="MenuDropDownButton"
                                 Value="True">
                            <Setter Property="Content"
                                    TargetName="MenuDropDownButton">
                                <Setter.Value>
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinDocMenu_Black.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 SourceName="MenuDropDownButton"
                                 Value="True">
                            <Setter Property="Content"
                                    TargetName="MenuDropDownButton">
                                <Setter.Value>
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinDocMenu_Black.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}"
                                     Value="0">
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="MenuDropDownButton" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Foreground"
                            Value="{DynamicResource {x:Static avalonDockAero:AeroColors.DocTabHeaderForegroundKey}}" />
                    <Setter Property="Background"
                            Value="{DynamicResource {x:Static avalonDockAero:AeroColors.DocTabHeaderBgKey}}" />
                    <Setter Property="BorderBrush"
                            Value="{DynamicResource {x:Static avalonDockAero:AeroColors.DocTabHeaderBorderKey}}" />
                    <Setter Property="IsSelected"
                            Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="ToolTip"
                            Value="{Binding ToolTip}" />
                    <Setter Property="Padding"
                            Value="2,1,2,1" />
                    <Setter Property="Margin"
                            Value="-1,1,0,0" />
                    <Setter Property="Focusable"
                            Value="False" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid SnapsToDevicePixels="true"
                                      UseLayoutRounding="True">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <!--<avalonDockThemeControls:SplineBorder
                                        x:Name="splineBd"
                                        Fill="{TemplateBinding Background}"
                                        Stroke="{TemplateBinding BorderBrush}"
                                        BottomBorderMargin="0.5"
                                        />-->

                                    <Border x:Name="Bd"
                                            Grid.Column="1"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1,0,1,0"
                                            MinWidth="72"
                                            MaxWidth="301">
                                        <Grid>
                                            <Border x:Name="BdInternal"
                                                    Background="{TemplateBinding Background}"
                                                    Padding="{TemplateBinding Padding}">
                                                <ContentPresenter x:Name="Content"
                                                                  ContentSource="Header"
                                                                  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                                  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                                  RecognizesAccessKey="True"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Border>
                                            <Grid VerticalAlignment="Top"
                                                  Background="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentPaneControl}},Converter={StaticResource LayoutDocumentPaneControSelectedItemHeaderColorConverter}}" 
                                                  Height="2"
                                                  Visibility="Hidden"
                                                  x:Name="Headbar"
                                                  Margin="-1,0,-1,0"
                                                  RenderTransformOrigin="0.5,0.5">
                                                <Grid.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform />
                                                        <SkewTransform />
                                                        <RotateTransform />
                                                        <TranslateTransform X="0"
                                                                            Y="-1" />
                                                    </TransformGroup>
                                                </Grid.RenderTransform>
                                            </Grid>
                                        </Grid>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Selector.IsSelected"
                                             Value="true">
                                        <Setter Property="BorderBrush"
                                                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.DocTabHeaderBorderActiveKey}}" />
                                        <Setter Property="Background"
                                                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor13Key}}" />
                                        <Setter Property="Foreground"
                                                Value="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutDocumentPaneControl}},Converter={StaticResource LayoutDocumentPaneControSelectedItemHeaderColorConverter}}" />
                                        <Setter Property="FontWeight"
                                                Value="Bold" />
                                        <Setter Property="Panel.ZIndex"
                                                Value="1" />
                                        <Setter Property="Margin"
                                                TargetName="BdInternal"
                                                Value="0,0,0,-1" />
                                        <Setter TargetName="Headbar"
                                                Property="Visibility"
                                                Value="Visible" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver"
                                                       Value="true" />
                                            <Condition Property="Selector.IsSelected"
                                                       Value="false" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="BorderBrush"
                                                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.DocTabHeaderBorderActiveKey}}" />
                                        <Setter Property="Background"
                                                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor13Key}}" />
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.DocTabHeaderForegroundActiveKey}}" />
                                        <Setter Property="Panel.ZIndex"
                                                Value="0" />
                                        <!--<Setter Property="Margin" Value="-2,0,0,0"/>-->
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled"
                                             Value="false">
                                        <Setter Property="BorderBrush"
                                                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor13Key}}" />
                                        <Setter Property="Background"
                                                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor9Key}}" />
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutDocumentTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutDocumentControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--AnchorablePaneControlStyle-->
    <Style x:Key="AvalonDock_ThemeAero_AnchorablePaneControlStyle"
           TargetType="{x:Type avalonDockControls:LayoutAnchorablePaneControl}">
        <Setter Property="TabStripPlacement"
                Value="Bottom" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Foreground"
                Value="{Binding Model.Root.Manager.Foreground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Background"
                Value="{Binding Model.Root.Manager.Background, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorablePaneControl}">
                    <Grid ClipToBounds="true"
                          SnapsToDevicePixels="true"
                          KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <!--Following border is required to catch mouse events-->
                        <Border Background="Transparent"
                                Grid.RowSpan="2" />
                        <Border x:Name="ContentPanel"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentSource="SelectedContent"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <avalonDockControls:AnchorablePaneTabPanel x:Name="HeaderPanel"
                                                                   Margin="0,0,2,2"
                                                                   IsItemsHost="true"
                                                                   Grid.Row="1"
                                                                   KeyboardNavigation.TabIndex="1"
                                                                   Panel.ZIndex="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Self}}"
                                     Value="1">
                            <Setter Property="Margin"
                                    Value="0"
                                    TargetName="HeaderPanel" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Background"
                            Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor4Key}}" />
                    <Setter Property="BorderBrush"
                            Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor5Key}}" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor12Key}}" />
                    <Setter Property="IsSelected"
                            Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="ToolTip"
                            Value="{Binding ToolTip}" />
                    <Setter Property="Margin"
                            Value="0,0,-1,0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid SnapsToDevicePixels="true">
                                    <Border x:Name="Bd"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1,0,1,1"
                                            Background="{TemplateBinding Background}"
                                            Padding="{TemplateBinding Padding}">
                                        <ContentPresenter x:Name="Content"
                                                          ContentSource="Header"
                                                          HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                          VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Selector.IsSelected"
                                             Value="true">
                                        <Setter Property="Background"
                                                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor2Key}}" />
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor3Key}}" />
                                        <Setter Property="Panel.ZIndex"
                                                Value="1" />
                                        <Setter Property="Margin"
                                                Value="0,-1,-1,-2" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver"
                                                       Value="true" />
                                            <Condition Property="Selector.IsSelected"
                                                       Value="false" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="BorderBrush"
                                                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor32Key}}" />
                                        <Setter Property="Background"
                                                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor27Key}}" />
                                        <Setter Property="Panel.ZIndex"
                                                Value="0" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled"
                                             Value="false">
                                        <Setter Property="BorderBrush"
                                                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor13Key}}" />
                                        <Setter Property="Background"
                                                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor9Key}}" />
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}"
                                     Value="1">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutAnchorableTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutAnchorableControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--panel header as:sitmap-->
    <Style TargetType="avalonDockControls:AnchorablePaneTitle">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.PanelTitleForegroundKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor5Key}}"
                            BorderThickness="0,0,0,0"
                            Padding="8,5,9,4">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <avalonDockControls:DropDownControlArea DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                                    DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                <ContentPresenter x:Name="Header"
                                                  Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
                            </avalonDockControls:DropDownControlArea>


                            <!--<avalonDockControls:DropDownButton
                                x:Name="MenuDropDownButton"
                                VerticalAlignment="Center"
                                Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                                Focusable="False"
                                Grid.Column="1"
                                Padding="-1"
                                DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}"
                                >
                        <Image x:Name="PART_ImgMenuPin" Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinMenu_Dark.png"/>-->
                            <!--</avalonDockControls:DropDownButton>-->
                            <Button x:Name="PART_FloatPin"
                                    Grid.Column="1"
                                    Focusable="False"
                                    Padding="-1"
                                    Style="{StaticResource ToolbarStyleButton}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Command="{Binding Path=LayoutItem.FloatCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                    ToolTip="{DynamicResource Anchorable_Float}"
                                    Width="15"
                                    Height="15"
                                    RenderOptions.BitmapScalingMode="NearestNeighbor"
                                    RenderOptions.EdgeMode="Aliased"
                                    Margin="0,0,4,0">
                                <Image x:Name="PART_ImgFloatPin"
                                       Source="Images/icon-13-pane-float.png" />
                            </Button>

                            <!--<Button x:Name="PART_AutoHidePin" 
                                Grid.Column="2" 
                                Focusable="False"
                                Padding="-1"
                                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Command="{Binding Path=LayoutItem.AutoHideCommand, RelativeSource={RelativeSource TemplatedParent}}" 
                                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnAutoHide_Hint}"
                                >
                                <Image x:Name="PART_ImgAutoHidePin" Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinAutoHide_Dark.png"/>
                     </Button>-->
                            <Button x:Name="PART_HidePin"
                                    Grid.Column="2"
                                    Focusable="False"
                                    Padding="-1"
                                    Style="{StaticResource ToolbarStyleButton}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Command="{Binding Path=LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                    ToolTip="{DynamicResource Anchorable_BtnClose_Hint}"
                                    Width="15"
                                    Height="15"
                                    RenderOptions.BitmapScalingMode="NearestNeighbor"
                                    RenderOptions.EdgeMode="Aliased">
                                <Image x:Name="PART_ImgHidePin"
                                       Source="Images/icon-13-pane-close.png" />
                            </Button>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<DataTrigger Binding="{Binding Model.IsAutoHidden, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                     <Setter Property="LayoutTransform" TargetName="PART_AutoHidePin">
                        <Setter.Value>
                           <RotateTransform Angle="90"/>
                        </Setter.Value>
                     </Setter>
                  </DataTrigger>-->
                        <DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}"
                                     Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource {x:Static avalonDockAero:AeroColors.PanelTitleBackgroundActiveKey}}" />
                        </DataTrigger>

                        <!--<Trigger Property="IsMouseOver" SourceName="MenuDropDownButton" Value="True">
                     <Setter Property="Source" TargetName="PART_ImgMenuPin" Value="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinMenu_Black.png"/>
                  </Trigger>
                  <Trigger Property="IsChecked" SourceName="MenuDropDownButton" Value="True">
                     <Setter Property="Source" TargetName="PART_ImgMenuPin" Value="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinMenu_Black.png"/>
                  </Trigger>-->
                        <!--<Trigger Property="IsMouseOver" SourceName="PART_AutoHidePin" Value="True">
                     <Setter Property="Source" TargetName="PART_ImgAutoHidePin" Value="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinAutoHide_Black.png"/>
                  </Trigger>-->
                        <!--<Trigger Property="IsMouseOver" SourceName="PART_HidePin" Value="True">
                     <Setter Property="Source" TargetName="PART_ImgHidePin" Value="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinClose_Black.png"/>
                  </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="AvalonDock_ThemeAero_AnchorSideTemplate"
                     TargetType="{x:Type avalonDockControls:LayoutAnchorSideControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel MinWidth="4"
                                MinHeight="4"
                                Orientation="{Binding Path=Model.Side, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutAnchorSideControl}, Mode=FindAncestor}, Converter={StaticResource AnchorSideToOrientationConverter}}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="AvalonDock_ThemeAero_AnchorGroupTemplate"
                     TargetType="{x:Type avalonDockControls:LayoutAnchorGroupControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.LayoutTransform>
                <RotateTransform Angle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Model.Parent.Side, Converter={StaticResource AnchorSideToAngleConverter}}" />
            </ItemsControl.LayoutTransform>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="AvalonDock_ThemeAero_AnchorTemplate"
                     TargetType="{x:Type avalonDockControls:LayoutAnchorControl}">
        <Border x:Name="Bd"
                Background="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor26Key}}"
                BorderBrush="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor5Key}}"
                BorderThickness="1"
                Margin="0,4,0,0"
                Padding="2">
            <ContentPresenter Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                              ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                              ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Side"
                     Value="Right">
                <Setter Property="Margin"
                        Value="0,0,0,4"
                        TargetName="Bd" />
            </Trigger>
            <Trigger Property="Side"
                     Value="Bottom">
                <Setter Property="Margin"
                        Value="0,4,0,0"
                        TargetName="Bd" />
            </Trigger>
            <Trigger Property="Side"
                     Value="Top">
                <Setter Property="Margin"
                        Value="0,0,0,4"
                        TargetName="Bd" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="true" />
                    <Condition Property="Selector.IsSelected"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush"
                        Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor14Key}}"
                        TargetName="Bd" />
                <Setter Property="Background"
                        Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor6Key}}"
                        TargetName="Bd" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type avalonDockControls:OverlayWindow}"
           TargetType="{x:Type avalonDockControls:OverlayWindow}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:OverlayWindow}">
                    <Canvas x:Name="PART_DropTargetsContainer"
                            Opacity="0.9">
                        <Path x:Name="PART_PreviewBox"
                              Fill="AliceBlue"
                              StrokeThickness="2"
                              Stroke="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        <Grid x:Name="PART_DockingManagerDropTargets">
                            <Image x:Name="PART_DockingManagerDropTargetLeft"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Left"
                                   Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockAnchorableLeft.PNG"
                                   Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetRight"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Right"
                                   Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockAnchorableRight.PNG"
                                   Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetBottom"
                                   VerticalAlignment="Bottom"
                                   HorizontalAlignment="Center"
                                   Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockAnchorableBottom.PNG"
                                   Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetTop"
                                   VerticalAlignment="Top"
                                   HorizontalAlignment="Center"
                                   Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockAnchorableTop.PNG"
                                   Stretch="None" />
                        </Grid>
                        <Grid x:Name="PART_AnchorablePaneDropTargets">
                            <Grid Width="110"
                                  Height="110"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Image Grid.ColumnSpan="3"
                                       Grid.RowSpan="3"
                                       Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockPaneEmpty.png"
                                       Stretch="None"
                                       Margin="0,0.5,0,-0.5" />
                                <Border Name="PART_AnchorablePaneDropTargetTop"
                                        Grid.Column="1"
                                        Grid.Row="0"
                                        Margin="0,3.5,0, 0">
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockDocumentAsAnchorableTop.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetRight"
                                        Grid.Column="2"
                                        Grid.Row="1"
                                        Margin="2">
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockDocumentAsAnchorableRight.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetBottom"
                                        Grid.Column="1"
                                        Grid.Row="2"
                                        Margin="0,-0.5,0,0">
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockDocumentAsAnchorableBottom.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetLeft"
                                        Grid.Column="0"
                                        Grid.Row="1"
                                        Margin="2">
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockDocumentAsAnchorableLeft.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetInto"
                                        Grid.Column="1"
                                        Grid.Row="1"
                                        Margin="0,0.5,0,0">
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockDocumentInside.png"
                                           Stretch="None" />
                                </Border>
                            </Grid>
                        </Grid>
                        <Grid x:Name="PART_DocumentPaneDropTargets">
                            <Grid Width="110"
                                  Height="110"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Image Grid.ColumnSpan="3"
                                       Grid.RowSpan="3"
                                       Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockPaneEmpty.PNG"
                                       Stretch="None" />
                                <Border Name="PART_DocumentPaneDropTargetTop"
                                        Grid.Column="1"
                                        Grid.Row="0"
                                        Margin="2">
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockDocumentTop.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetRight"
                                        Grid.Column="2"
                                        Grid.Row="1"
                                        Margin="2">
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockDocumentRight.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetBottom"
                                        Grid.Column="1"
                                        Grid.Row="2"
                                        Margin="2">
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockDocumentBottom.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetLeft"
                                        Grid.Column="0"
                                        Grid.Row="1"
                                        Margin="2">
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockDocumentLeft.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetInto"
                                        Grid.Column="1"
                                        Grid.Row="1">
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockDocumentInside.png"
                                           Stretch="None" />
                                </Border>
                            </Grid>
                        </Grid>

                        <Grid x:Name="PART_DocumentPaneFullDropTargets">
                            <Grid Width="193"
                                  Height="191"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Image Grid.ColumnSpan="5"
                                       Grid.RowSpan="5"
                                       Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockPaneLargeEmpty.PNG"
                                       Stretch="None" />
                                <Border Name="PART_DocumentPaneFullDropTargetTop"
                                        Grid.Column="2"
                                        Grid.Row="1">
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockDocumentTop.png"
                                           Stretch="None"
                                           Margin="2" />
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetRight"
                                        Grid.Column="3"
                                        Grid.Row="2">
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockDocumentRight.png"
                                           Stretch="None"
                                           Margin="2" />
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetBottom"
                                        Grid.Column="2"
                                        Grid.Row="3">
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockDocumentBottom.png"
                                           Stretch="None"
                                           Margin="2" />
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetLeft"
                                        Grid.Column="1"
                                        Grid.Row="2">
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockDocumentLeft.png"
                                           Stretch="None"
                                           Margin="2" />
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetInto"
                                        Grid.Column="2"
                                        Grid.Row="2">
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockDocumentInside.png"
                                           Stretch="None" />
                                </Border>

                                <Border Name="PART_DocumentPaneDropTargetTopAsAnchorablePane"
                                        Grid.Column="2"
                                        Grid.Row="0">
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockDocumentAsAnchorableTop.png"
                                           Stretch="None"
                                           Margin="2" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetRightAsAnchorablePane"
                                        Grid.Column="4"
                                        Grid.Row="2">
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockDocumentAsAnchorableRight.png"
                                           Stretch="None"
                                           Margin="2" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetBottomAsAnchorablePane"
                                        Grid.Column="2"
                                        Grid.Row="4">
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockDocumentAsAnchorableBottom.png"
                                           Stretch="None"
                                           Margin="2" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetLeftAsAnchorablePane"
                                        Grid.Column="0"
                                        Grid.Row="2">
                                    <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/DockDocumentAsAnchorableLeft.png"
                                           Stretch="None"
                                           Margin="2" />
                                </Border>

                            </Grid>
                        </Grid>

                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="AvalonDock_ThemeAero_DocumentHeaderTemplate">
        <TextBlock Text="{Binding Title}"
                   TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="AvalonDock_ThemeAero_AnchorableHeaderTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Image x:Name="icon"
                   Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}"
                   Stretch="Uniform" />
            <TextBlock x:Name="title"
                       Margin="4,0,0,0"
                       Text="{Binding Title}"
                       TextTrimming="CharacterEllipsis"
                       Grid.Column="1" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IconSource}"
                         Value="{x:Null}">
                <Setter Property="Margin"
                        Value="0"
                        TargetName="title" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="AvalonDock_ThemeAero_DocumentTitleTemplate">
        <TextBlock Text="{Binding Title}"
                   TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="AvalonDock_ThemeAero_AnchorableTitleTemplate">
        <TextBlock Text="{Binding Title}"
                   TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="AvalonDock_ThemeAero_IconContentTemplate">
        <Image Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}"
               Stretch="Uniform" />
    </DataTemplate>

    <ContextMenu x:Key="AvalonDock_ThemeAero_AnchorableContextMenu">
        <MenuItem Header="{DynamicResource Anchorable_Float}"
                  Command="{Binding Path=FloatCommand}" />
        <MenuItem Header="{DynamicResource Anchorable_Dock}"
                  Command="{Binding Path=DockCommand}" />
        <!--<MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_DockAsDocument}" 
                Command="{Binding Path=DockAsDocumentCommand}"/>
      <MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_AutoHide}" 
                Command="{Binding Path=AutoHideCommand}"/>
      <MenuItem Header="{x:Static avalonDockProperties:Resources.Anchorable_Hide}" 
                Command="{Binding Path=HideCommand}"
                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>-->
    </ContextMenu>

    <ContextMenu x:Key="AvalonDock_ThemeAero_DocumentContextMenu">
        <MenuItem Header="{DynamicResource Document_Close}"
                  Command="{Binding Path=CloseCommand}"
                  Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
        <MenuItem Header="{DynamicResource Document_CloseAllButThis}"
                  Command="{Binding Path=CloseAllButThisCommand}" />
        <MenuItem Header="{DynamicResource Document_Float}"
                  Command="{Binding Path=FloatCommand}" />
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_DockAsDocument}"
                  Command="{Binding Path=DockAsDocumentCommand}" />
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_NewHorizontalTabGroup}"
                  Command="{Binding Path=NewHorizontalTabGroupCommand}"
                  Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
            <MenuItem.Icon>
                <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/HTabGroup.png"
                       Stretch="Uniform"
                       Width="14" />
            </MenuItem.Icon>
        </MenuItem>

        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_NewVerticalTabGroup}"
                  Command="{Binding Path=NewVerticalTabGroupCommand}"
                  Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
            <MenuItem.Icon>
                <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/VTabGroup.png"
                       Stretch="Uniform"
                       Width="14" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_MoveToNextTabGroup}"
                  Command="{Binding Path=MoveToNextTabGroupCommand}"
                  Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
        <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_MoveToPreviousTabGroup}"
                  Command="{Binding Path=MoveToPreviousTabGroupCommand}"
                  Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />

    </ContextMenu>

    <!--DockingManager-->
    <Style x:Key="{x:Type avalonDock:DockingManager}"
           TargetType="{x:Type avalonDock:DockingManager}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.MainBackgroupKey}}" />
        <Setter Property="DocumentPaneControlStyle"
                Value="{StaticResource AvalonDock_ThemeAero_DocumentPaneControlStyle}" />
        <Setter Property="AnchorablePaneControlStyle"
                Value="{StaticResource AvalonDock_ThemeAero_AnchorablePaneControlStyle}" />
        <Setter Property="AnchorSideTemplate"
                Value="{StaticResource AvalonDock_ThemeAero_AnchorSideTemplate}" />
        <Setter Property="AnchorGroupTemplate"
                Value="{StaticResource AvalonDock_ThemeAero_AnchorGroupTemplate}" />
        <Setter Property="AnchorTemplate"
                Value="{StaticResource AvalonDock_ThemeAero_AnchorTemplate}" />
        <Setter Property="DocumentHeaderTemplate"
                Value="{StaticResource AvalonDock_ThemeAero_DocumentHeaderTemplate}" />
        <Setter Property="AnchorableHeaderTemplate"
                Value="{StaticResource AvalonDock_ThemeAero_AnchorableHeaderTemplate}" />
        <Setter Property="DocumentTitleTemplate"
                Value="{StaticResource AvalonDock_ThemeAero_DocumentTitleTemplate}" />
        <Setter Property="AnchorableTitleTemplate"
                Value="{StaticResource AvalonDock_ThemeAero_AnchorableTitleTemplate}" />
        <Setter Property="AnchorableContextMenu"
                Value="{StaticResource AvalonDock_ThemeAero_AnchorableContextMenu}" />
        <Setter Property="DocumentContextMenu"
                Value="{StaticResource AvalonDock_ThemeAero_DocumentContextMenu}" />
        <Setter Property="DocumentPaneMenuItemHeaderTemplate"
                Value="{StaticResource AvalonDock_ThemeAero_DocumentHeaderTemplate}" />
        <Setter Property="IconContentTemplate"
                Value="{StaticResource AvalonDock_ThemeAero_IconContentTemplate}" />
        <Setter Property="GridSplitterWidth"
                Value="4" />
        <Setter Property="GridSplitterHeight"
                Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDock:DockingManager}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Content="{TemplateBinding LayoutRootPanel}"
                                              Grid.Column="1"
                                              Grid.Row="1" />
                            <ContentPresenter Margin="0,0,-5,0"
                                              Content="{TemplateBinding RightSidePanel}"
                                              Grid.Column="2"
                                              Grid.Row="1" />
                            <ContentPresenter Margin="-6,0,0,0"
                                              Content="{TemplateBinding LeftSidePanel}"
                                              Grid.Column="0"
                                              Grid.Row="1" />
                            <ContentPresenter Margin="0,-4,0,0"
                                              Content="{TemplateBinding TopSidePanel}"
                                              Grid.Column="1"
                                              Grid.Row="0" />
                            <ContentPresenter Margin="0,0,0,-5"
                                              Content="{TemplateBinding BottomSidePanel}"
                                              Grid.Column="1"
                                              Grid.Row="2" />
                            <ContentPresenter x:Name="PART_AutoHideArea"
                                              Content="{TemplateBinding AutoHideWindow}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              Grid.Column="1"
                                              Grid.Row="1" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--LayoutGridResizerControl-->
    <Style x:Key="{x:Type avalonDockControls:LayoutGridResizerControl}"
           TargetType="{x:Type avalonDockControls:LayoutGridResizerControl}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutGridResizerControl}">
                    <Border Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avalonDockControls:LayoutDocumentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}" />
                        <!--<ContentPresenter Content="{Binding Model.Content, RelativeSource={RelativeSource TemplatedParent}}" 
                                          ContentTemplate="{Binding LayoutItemTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                          ContentTemplateSelector="{Binding LayoutItemTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"/>-->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DocumentTabItem editor view-->
    <Style TargetType="{x:Type avalonDockControls:LayoutDocumentTabItem}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="UseLayoutRounding"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentTabItem}">
                    <!--<avalonDockControls:DropDownControlArea 
                            DropDownContextMenu="{Binding Root.Manager.DocumentContextMenu}"
                            DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}" >-->
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Resources>
                            <Style x:Key="TableBackgroundeButton"
                                   TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="Bd"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{TemplateBinding Background}"
                                                    Padding="{TemplateBinding Padding}"
                                                    SnapsToDevicePixels="true">
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Border.Resources>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.ColumnSpan="2"
                                    Background="Transparent" />
                            <!--<Button Grid.ColumnSpan="2"
                                    Background="Transparent"
                                    Command="{Binding Path=LayoutItem.ActivateCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource TableBackgroundeButton}"
                                    BorderThickness="0"
                                    Visibility="Collapsed"/>-->
                            <ContentPresenter Margin="0,0,0,0"
                                              HorizontalAlignment="Center"
                                              Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                              IsHitTestVisible="False"
                                              ContentTemplate="{Binding DocumentHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                              ContentTemplateSelector="{Binding DocumentHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}" />
                            <!-- Close button should be moved out to the container style -->
                            <Button x:Name="DocumentCloseButton"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Grid.Column="1"
                                    Margin="4,0,6,0"
                                    Visibility="Visible"
                                    Command="{Binding Path=LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    ToolTip="{DynamicResource Document_Close}">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Background"
                                                Value="Transparent" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border Background="{TemplateBinding Background}">
                                                        <ContentPresenter HorizontalAlignment="Center"
                                                                          VerticalAlignment="Center" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <!--<Style.Triggers>
                                            <Trigger Property="IsMouseOver"
                                                     Value="True">
                                                <Setter Property="Background"
                                                        Value="Red" />
                                            </Trigger>
                                        </Style.Triggers>-->
                                    </Style>
                                </Button.Style>
                                <Image x:Name="PART_ImgPinClose"
                                       Source="Images/Close_Normal.png" />
                            </Button>
                        </Grid>
                        <Border.ContextMenu>
                            <ContextMenu DataContext="{Binding LayoutItem,RelativeSource={RelativeSource TemplatedParent}}">
                                <MenuItem Header="{DynamicResource Document_CloseAllButThis}"
                                          Command="{Binding Path=CloseAllButThisCommand}" />
                            </ContextMenu>
                        </Border.ContextMenu>
                    </Border>
                    <!--</avalonDockControls:DropDownControlArea>-->
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsActive}"
                                     Value="true">
                            <Setter Property="FontWeight"
                                    Value="Bold" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver"
                                 SourceName="DocumentCloseButton"
                                 Value="True">
                            <Setter Property="Source"
                                    TargetName="PART_ImgPinClose"
                                    Value="Images/Close_Rollover_on.png" />
                        </Trigger>
                        <!--<DataTrigger Binding="{Binding Path=IsActive}" Value="true">
                     <Setter Property="Visibility" Value="Visible" TargetName="DocumentCloseButton"  />
                  </DataTrigger>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter Property="Visibility" Value="Visible" TargetName="DocumentCloseButton"  />
                  </Trigger>-->
                        <DataTrigger Binding="{Binding Path=CanClose}"
                                     Value="false">
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="DocumentCloseButton" />
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avalonDockControls:LayoutAnchorableTabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableTabItem}">
                    <avalonDockControls:DropDownControlArea DropDownContextMenu="{Binding Root.Manager.AnchorableContextMenu}"
                                                            DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ContentPresenter Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                                  ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}" />
                                <avalonDockControls:DropDownControlArea Grid.Column="0"
                                                                        DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                                        DropDownContextMenuDataContext="{Binding Path=Model, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Border>
                    </avalonDockControls:DropDownControlArea>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Panel and floating window's content-->
    <Style TargetType="{x:Type avalonDockControls:LayoutAnchorableControl}">
        <!--<Setter Property="RenderOptions.EdgeMode" Value="Aliased"/>-->
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Background"
                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor2Key}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableControl}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor5Key}}"
                            BorderThickness="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="Header"
                                    SnapsToDevicePixels="True"
                                    Background="{DynamicResource {x:Static avalonDockAero:AeroColors.PanelTitleBackgroundKey}}">
                                <avalonDockControls:AnchorablePaneTitle Model="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>
                            <ContentPresenter Grid.Row="1"
                                              FlowDirection="{TemplateBinding FlowDirection}"
                                              Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}" />

                            <!--<ContentPresenter 
                                Content="{Binding Model.Content, RelativeSource={RelativeSource TemplatedParent}}" 
                                ContentTemplate="{Binding LayoutItemTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                ContentTemplateSelector="{Binding LayoutItemTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                Grid.Row="1"/>-->
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}"
                                           Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <!--floating window: hide header and border(内border)-->
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="Header" />
                            <Setter Property="BorderBrush"
                                    Value="Transparent"
                                    TargetName="Bd" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Document:floating mode-->
    <Style x:Key="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}"
           TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor7Key}}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor14Key}}" />
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome ResizeBorderThickness="10"
                                    CaptionHeight="18"
                                    CornerRadius="3"
                                    GlassFrameThickness="0"
                                    ShowSystemMenu="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
                    <Grid>
                        <Border x:Name="WindowBorder"
                                BorderThickness="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid Margin="3">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="18" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border x:Name="Header"
                                        Padding="2,0,2,0">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter Content="{Binding Model.RootDocument, RelativeSource={RelativeSource TemplatedParent}}"
                                                          ContentTemplate="{Binding Model.Root.Manager.DocumentTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                          ContentTemplateSelector="{Binding Model.Root.Manager.DocumentTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />


                                        <!--<avalonDockControls:DropDownButton
                                            x:Name="ContextMenuDropdownButton"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                                            Focusable="False"
                                            Grid.Column="1"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            VerticalContentAlignment="Center"
                                            HorizontalContentAlignment="Center"
                                            DropDownContextMenu="{Binding Model.Root.Manager.DocumentContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                            DropDownContextMenuDataContext="{Binding Path=RootDocumentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Document_CxMenu_Hint}"
                                            >
                                 <Image x:Name="PART_ImgPinMenu" Stretch="None" Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinMenu_Dark.png" Width="13"/>
                              </avalonDockControls:DropDownButton>-->

                                        <!--<Button 
                                    x:Name="PART_PinDock"
                                    shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                    Grid.Column="1"
                                    Focusable="False"
                                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                    Command="{Binding Path=SingleContentLayoutItem.DockCommand, RelativeSource={RelativeSource TemplatedParent}}" 
                                    CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_Dock}">
                                            <Image x:Name="PART_ImgPinDock" Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinDock.png" Width="13" />
                                </Button>-->

                                        <Button x:Name="PART_PinMaximize"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                                Focusable="False"
                                                Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                                Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                ToolTip="{DynamicResource Window_Maximize}"
                                                Grid.Column="2">
                                            <Image x:Name="PART_ImgPinMaximize"
                                                   Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinMaximize_Dark.png"
                                                   Width="13" />
                                        </Button>

                                        <Button x:Name="PART_PinRestore"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                                Focusable="False"
                                                Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                                Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                ToolTip="{DynamicResource Window_Restore}"
                                                Grid.Column="2">
                                            <Image x:Name="PART_ImgPinRestore"
                                                   Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinRestore_Dark.png"
                                                   Width="13" />
                                        </Button>

                                        <Button x:Name="PART_PinClose"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                                Focusable="False"
                                                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                                Command="{Binding Path=RootDocumentLayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                ToolTip="{DynamicResource Document_Close}"
                                                Grid.Column="3">
                                            <Image x:Name="PART_ImgPinClose"
                                                   Source="Images/icon-13-pane-close.png"
                                                   Width="13" />
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter Content="{TemplateBinding Content}"
                                                  Grid.Row="1" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState"
                                 Value="Maximized">
                            <Setter Property="Padding"
                                    Value="3"
                                    TargetName="WindowBorder" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.RootDocument.IsActive}"
                                     Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor14Key}}" />
                            <Setter Property="Background"
                                    Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor14Key}}" />
                            <Setter Property="Background"
                                    Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor6Key}}"
                                    TargetName="Header" />
                        </DataTrigger>

                        <!--<Trigger Property="IsMouseOver" SourceName="ContextMenuDropdownButton" Value="True">
                     <Setter Property="Source" TargetName="PART_ImgPinMenu" Value="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinMenu_Black.png"/>
                  </Trigger>
                  <Trigger Property="IsChecked" SourceName="ContextMenuDropdownButton" Value="True">
                     <Setter Property="Source" TargetName="PART_ImgPinMenu" Value="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinMenu_Black.png"/>
                  </Trigger>-->
                        <Trigger Property="IsMouseOver"
                                 SourceName="PART_PinMaximize"
                                 Value="True">
                            <Setter Property="Source"
                                    TargetName="PART_ImgPinMaximize"
                                    Value="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinMaximize_Black.png" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 SourceName="PART_PinRestore"
                                 Value="True">
                            <Setter Property="Source"
                                    TargetName="PART_ImgPinRestore"
                                    Value="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinRestore_Black.png" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 SourceName="PART_PinClose"
                                 Value="True">
                            <Setter Property="Source"
                                    TargetName="PART_ImgPinClose"
                                    Value="Images/icon-13-pane-close.png" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <!--panels,folating window  eg: sitemap..-->
    <Style x:Key="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}"
           TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome ResizeBorderThickness="10"
                                    CaptionHeight="18"
                                    CornerRadius="0"
                                    GlassFrameThickness="0" />
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.PanelTitleForegroundKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
                    <Grid>
                        <Border x:Name="WindowBorder"
                                BorderThickness="1"
                                CornerRadius="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{DynamicResource {x:Static avalonDockAero:AeroColors.WindowBorderColorKey}}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="25" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border x:Name="Header"
                                        CornerRadius="0,0,0,0"
                                        Padding="14,0,2,0"
                                        Background="{DynamicResource {x:Static avalonDockAero:AeroColors.PanelTitleBackgroundKey}}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <Border VerticalAlignment="Center"
                                                Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <avalonDockControls:DropDownControlArea DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                                                    DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ContentPresenter Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
                                                                  ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                                  ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </avalonDockControls:DropDownControlArea>
                                        </Border>

                                        <!--<avalonDockControls:DropDownButton
                                            x:Name="SinglePaneContextMenu"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                            Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                                            Focusable="False"
                                            Grid.Column="1"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            VerticalContentAlignment="Center"
                                            HorizontalContentAlignment="Center"
                                            DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                            DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}">
                                 <Image x:Name="PART_ImgPinMenu" Stretch="None" Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinMenu_Dark.png" Width="13"/>
                              </avalonDockControls:DropDownButton>-->

                                        <Button x:Name="PART_PinDock"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                                Grid.Column="1"
                                                Focusable="False"
                                                Style="{StaticResource ToolbarStyleButton}"
                                                Command="{Binding Path=SingleContentLayoutItem.DockCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                ToolTip="{DynamicResource Anchorable_Dock}">
                                            <Image x:Name="PART_ImgPinDock"
                                                   Source="Images/icon-13-pane-dock.png"
                                                   Width="13" />
                                        </Button>

                                        <!--<Button 
                                    x:Name="PART_PinMaximize"
                                    shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                    Focusable="False"
                                    Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    HorizontalContentAlignment="Center"
                                    Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    ToolTip="{x:Static avalonDockProperties:Resources.Window_Maximize}"
                                    Grid.Column="2">
                                 <Image x:Name="PART_ImgPinMaximize" Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinMaximize_Dark.png" Width="13"/>
                              </Button>-->

                                        <Button x:Name="PART_PinRestore"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                                Focusable="False"
                                                Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                ToolTip="{DynamicResource Window_Restore}"
                                                Grid.Column="2">
                                            <Image  x:Name="PART_ImgPinRestore"
                                                    Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinRestore_Dark.png"
                                                    Width="13" />
                                        </Button>

                                        <Button x:Name="PART_PinClose"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                                Focusable="False"
                                                Style="{StaticResource ToolbarStyleButton}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                                Command="{Binding HideWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}"
                                                Grid.Column="3">
                                            <Image x:Name="PART_ImgPinClose"
                                                   Source="Images/icon-13-pane-close.png"
                                                   Width="13" />
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter Content="{TemplateBinding Content}"
                                                  Grid.Row="1" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState"
                                 Value="Maximized">
                            <Setter Property="Padding"
                                    Value="3"
                                    TargetName="WindowBorder" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}"
                                     Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource {x:Static avalonDockAero:AeroColors.PanelTitleBackgroundActiveKey}}"
                                    TargetName="Header" />
                        </DataTrigger>
                        <!--<Trigger Property="IsMouseOver" SourceName="SinglePaneContextMenu" Value="True">
                     <Setter Property="Source" TargetName="PART_ImgPinMenu" Value="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinMenu_Black.png"/>
                  </Trigger>
                  <Trigger Property="IsChecked" SourceName="SinglePaneContextMenu" Value="True">
                     <Setter Property="Source" TargetName="PART_ImgPinMenu" Value="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinMenu_Black.png"/>
                  </Trigger>-->
                        <!--<Trigger Property="IsMouseOver" SourceName="PART_PinMaximize" Value="True">
                     <Setter Property="Source" TargetName="PART_ImgPinMaximize" Value="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinMaximize_Black.png"/>
                  </Trigger>-->
                        <Trigger Property="IsMouseOver"
                                 SourceName="PART_PinRestore"
                                 Value="True">
                            <Setter Property="Source"
                                    TargetName="PART_ImgPinRestore"
                                    Value="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinRestore_Black.png" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 SourceName="PART_PinClose"
                                 Value="True">
                            <Setter Property="Source"
                                    TargetName="PART_ImgPinClose"
                                    Value="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/PinClose_Black.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type avalonDockControls:LayoutAutoHideWindowControl}"
           TargetType="{x:Type avalonDockControls:LayoutAutoHideWindowControl}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor5Key}}" />
    </Style>


    <Style x:Key="AvalonDock_ThemeAero_NavigatorWindowListBoxItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle RadiusY="2"
                               RadiusX="2"
                               Stroke="#8E6EA6F5"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="AvalonDock_ThemeAero_NavigatorWindowListBoxItemHoverFill"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <GradientStop Color="#FFD5F1FE"
                      Offset="0" />
        <GradientStop Color="#FFD5F1FE"
                      Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AvalonDock_ThemeAero_NavigatorWindowListBoxItemSelectedFill"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <GradientStop Color="#FFD9F4FF"
                      Offset="0" />
        <GradientStop Color="#FF9BDDFB"
                      Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AvalonDock_ThemeAero_NavigatorWindowListBoxItemSelectedInactiveFill"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <GradientStop Color="#FFEEEDED"
                      Offset="0" />
        <GradientStop Color="#FFDDDDDD"
                      Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AvalonDock_ThemeAero_NavigatorWindowListBoxItemSelectedHoverFill"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <GradientStop Color="#FFEAF9FF"
                      Offset="0" />
        <GradientStop Color="#FFC9EDFD"
                      Offset="1" />
    </LinearGradientBrush>

    <Style x:Key="AvalonDock_ThemeAero_NavigatorWindowListBoxItemStyle"
           TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource AvalonDock_ThemeAero_NavigatorWindowListBoxItemFocusVisual}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Padding"
                Value="5,0,5,0" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2"
                            SnapsToDevicePixels="true">
                        <Border x:Name="InnerBorder"
                                BorderThickness="1"
                                CornerRadius="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="11" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Rectangle x:Name="UpperHighlight"
                                           Fill="#75FFFFFF"
                                           Visibility="Collapsed" />
                                <ContentPresenter Grid.RowSpan="2"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource AvalonDock_ThemeAero_NavigatorWindowListBoxItemSelectedFill}" />
                            <Setter Property="BorderBrush"
                                    Value="#FF98DDFB" />
                            <Setter Property="BorderBrush"
                                    TargetName="InnerBorder"
                                    Value="#80FFFFFF" />
                            <Setter Property="Visibility"
                                    TargetName="UpperHighlight"
                                    Value="Visible" />
                            <Setter Property="Fill"
                                    TargetName="UpperHighlight"
                                    Value="#40FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource AvalonDock_ThemeAero_NavigatorWindowListBoxItemSelectedFill}" />
                            <Setter Property="BorderBrush"
                                    Value="#FF98DDFB" />
                            <Setter Property="BorderBrush"
                                    TargetName="InnerBorder"
                                    Value="#80FFFFFF" />
                            <Setter Property="Visibility"
                                    TargetName="UpperHighlight"
                                    Value="Visible" />
                            <Setter Property="Fill"
                                    TargetName="UpperHighlight"
                                    Value="#40FFFFFF" />
                        </Trigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource AvalonDock_ThemeAero_NavigatorWindowListBoxItemSelectedHoverFill}"/>
                            <Setter Property="BorderBrush" Value="#FF98DDFB"/>
                        </MultiTrigger>-->
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type avalonDockControls:NavigatorWindow}"
           TargetType="{x:Type avalonDockControls:NavigatorWindow}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="SizeToContent"
                Value="WidthAndHeight" />
        <Setter Property="ResizeMode"
                Value="NoResize" />
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome ResizeBorderThickness="10"
                                    CaptionHeight="16"
                                    CornerRadius="3,3,3,3"
                                    GlassFrameThickness="4" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:NavigatorWindow}">
                    <Grid>
                        <Border x:Name="WindowBorder"
                                BorderThickness="1"
                                CornerRadius="3"
                                Background="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor2Key}}"
                                BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="54" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Grid Margin="5">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Image Source="{Binding SelectedDocument.LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}"
                                               Stretch="None"
                                               Visibility="{Binding SelectedDocument.LayoutElement.IconSource, Converter={StaticResource BoolToVisibilityConverter} }" />
                                        <TextBlock Text="{Binding SelectedDocument.LayoutElement.Title}"
                                                   TextTrimming="CharacterEllipsis"
                                                   Grid.Column="1"
                                                   VerticalAlignment="Center"
                                                   FontWeight="Bold"
                                                   Margin="4,0,0,0" />
                                    </Grid>
                                    <TextBlock Text="{Binding SelectedDocument.LayoutElement.Description}"
                                               TextTrimming="CharacterEllipsis"
                                               VerticalAlignment="Center" />
                                </Grid>

                                <Border Grid.Row="1"
                                        BorderBrush="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor11Key}}"
                                        BorderThickness="0,1,0,0"
                                        Background="{DynamicResource {x:Static avalonDockAero:AeroColors.BaseColor7Key}}"
                                        MinHeight="200">
                                    <Grid  Margin="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid Margin="5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="Active Tool Windows"
                                                       FontWeight="Bold"
                                                       Margin="0,3,0,4" />
                                            <ListBox Grid.Row="1"
                                                     ItemsSource="{Binding Anchorables}"
                                                     SelectedItem="{Binding SelectedAnchorable, Mode=TwoWay}"
                                                     ItemContainerStyle="{StaticResource AvalonDock_ThemeAero_NavigatorWindowListBoxItemStyle}"
                                                     Background="Transparent"
                                                     BorderThickness="0"
                                                     MaxHeight="400">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="16" />
                                                                <ColumnDefinition Width="150" />
                                                            </Grid.ColumnDefinitions>
                                                            <Image Source="{Binding LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}"
                                                                   Stretch="None" />
                                                            <TextBlock Text="{Binding LayoutElement.Title}"
                                                                       TextTrimming="CharacterEllipsis"
                                                                       Grid.Column="1"
                                                                       Margin="4,0,0,0" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                        </Grid>
                                        <Grid Grid.Column="1"
                                              Margin="5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="Active Files"
                                                       FontWeight="Bold"
                                                       Margin="0,3,0,4" />
                                            <ListBox Grid.Row="1"
                                                     ItemsSource="{Binding Documents}"
                                                     SelectedItem="{Binding SelectedDocument, Mode=TwoWay}"
                                                     ItemContainerStyle="{StaticResource AvalonDock_ThemeAero_NavigatorWindowListBoxItemStyle}"
                                                     Background="Transparent"
                                                     BorderThickness="0"
                                                     MaxHeight="400">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="16" />
                                                                <ColumnDefinition Width="150" />
                                                            </Grid.ColumnDefinitions>
                                                            <Image Source="{Binding LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}"
                                                                   Stretch="None" />
                                                            <TextBlock Text="{Binding LayoutElement.Title}"
                                                                       TextTrimming="CharacterEllipsis"
                                                                       Grid.Column="1"
                                                                       Margin="4,0,0,0" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel Orientation="Vertical" />
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                            </ListBox>
                                        </Grid>
                                    </Grid>
                                </Border>

                                <Grid Grid.Row="2"
                                      Margin="5">
                                    <TextBlock Text="{Binding SelectedDocument.LayoutElement.ToolTip}"
                                               VerticalAlignment="Center" />
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


</ResourceDictionary>
